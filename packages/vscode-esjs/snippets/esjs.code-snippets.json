{"Ciclo para":{"prefix":"para","body":["para (var ${1:indice} = 0; ${1:indice} < ${2:lista}.longitud; ${1:indice}++) {","\tconst ${3:elemento} = ${2:lista}[${1:indice}];","\t$TM_SELECTED_TEXT$0","}"],"description":"For Loop"},"Ciclo paraCada":{"prefix":"paraCada","body":["${1:lista}.paraCada(${2:elemento} => {","\t$TM_SELECTED_TEXT$0","});"],"description":"For-Each Loop"},"Ciclo paraEn":{"prefix":"paraEn","body":["para (const ${1:clave} en ${2:object}) {","\tsi (Object.hasOwnProperty.call(${2:object}, ${1:clave})) {","\t\tconst ${3:elemento} = ${2:object}[${1:clave}];","\t\t$TM_SELECTED_TEXT$0","\t}","}"],"description":"For-In Loop"},"Ciclo paraDe":{"prefix":"paraDe","body":["para (const ${1:iterator} de ${2:object}) {","\t$TM_SELECTED_TEXT$0","}"],"description":"For-Of Loop"},"Declaración de Función":{"prefix":"funcion","body":["funcion ${1:name}(${2:parámetros}) {","\t$TM_SELECTED_TEXT$0","}"],"description":"Function Statement"},"Declaración de Función Asíncrona":{"prefix":"funcionAsincrona","body":["asincrono funcion ${1:nombre}(${2:parámetros}) {","\t$TM_SELECTED_TEXT$0","}"],"description":"Async Function Statement"},"Condición Si":{"prefix":"si","body":["si (${1:condición}) {","\t$TM_SELECTED_TEXT$0","}"],"description":"If Statement"},"Condición Si-Sino":{"prefix":"si-sino","body":["si (${1:condición}) {","\t$TM_SELECTED_TEXT$0","} sino {","\t","}"],"description":"If-Else Statement"},"Nueva declaración":{"prefix":"crear","body":["const ${1:nombre} = crear ${2:tipo}(${3:argumentos});$0"],"description":"New Statement"},"Condición Elegir":{"prefix":"elegir","body":["elegir (${1:clave}) {","\tcaso ${2:value}:","\t\t$0","\t\tromper;","","\tdefault:","\t\tromper;","}"],"description":"Switch Statement"},"Ciclo Mientras":{"prefix":"mientras","body":["mientras (${1:condición}) {","\t$TM_SELECTED_TEXT$0","}"],"description":"While Statement"},"Ciclo Hacer-Mientras":{"prefix":"hacer-mientras","body":["hacer {","\t$TM_SELECTED_TEXT$0","} mientras (${1:condición});"],"description":"Do-While Statement"},"Declaración Intentar-Capturar":{"prefix":"intentar-capturar","body":["intentar {","\t$TM_SELECTED_TEXT$0","} capturar (${1:error}) {","\t","}"],"description":"Try-Catch Statement"},"Función establecerTemporizador":{"prefix":"establecerTemporizador","body":["establecerTemporizador(() => {","\t$TM_SELECTED_TEXT$0","}, ${1:tiempoMuerto});"],"description":"Set Timeout Function"},"Función establecerIntervalo":{"prefix":"establecerIntervalo","body":["establecerIntervalo(() => {","\t$TM_SELECTED_TEXT$0","}, ${1:intervalo});"],"description":"Set Interval Function"},"Declaración Importar":{"prefix":"importar","body":["importar { $0 } desde \"${1:modulo}\";"],"description":"Import external modulo"},"Comienzo de Región":{"prefix":"#region","body":["//#region $0"],"description":"Folding Region Start"},"Fin de Región":{"prefix":"#endregion","body":["//#endregion"],"description":"Folding Region End"},"Escribir en la Consola":{"prefix":"escribir","body":["consola.escribir($1);"],"description":"Log to the console"},"Advertir en la Consola":{"prefix":"advertencia","body":["consola.advertencia($1);"],"description":"Log warning to the console"},"Error en la Consola":{"prefix":"error","body":["consola.error($1);"],"description":"Log error to the console"},"Nueva Promesa":{"prefix":"nuevaPromesa","body":["crear Promesa((resolve, reject) => {","\t$TM_SELECTED_TEXT$0","})"],"description":"Create a new Promise"}}